name: esmf-8.0.1_jasper-2.0.22_nceplibs-1.3.0
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-9
      FC: gfortran-9
      CXX: g++-9
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-20.04]
        compiler: [gcc-9]      

    steps:

    - name: cache-mpich
      id: cache-mpich
      uses: actions/cache@v2
      with:
        path: ~/mpich
        key: mpich-${{ runner.os }}-3.3.2-1

    - name: build-mpich
      if: steps.cache-mpich.outputs.cache-hit != 'true'
      run: |
        if [[ ${{ matrix.os }} == "macos-10.15" ]]; then
          wget http://www.mpich.org/static/downloads/3.3.2/mpich-3.3.2.tar.gz &> /dev/null
          tar -xzf mpich-3.3.2.tar.gz
          pushd mpich-3.3.2
          ./configure --prefix=$HOME/mpich
          make
          sudo make install
          popd
        fi

    - name: install-dependencies
      run: |
        echo "$HOME/mpich/bin" >> $GITHUB_PATH
        if [[ ${{ matrix.os }} == "ubuntu-20.04" ]]; then
          sudo apt-get update
          sudo apt-get install libmpich-dev
          sudo apt-get install doxygen
          sudo apt-get install libnetcdf-dev libnetcdff-dev netcdf-bin pkg-config
          sudo apt-get install libpng-dev
          sudo apt-get install libjpeg-dev
        elif [[ ${{ matrix.os }} == "macos-10.15" ]]; then
          brew update
          brew install doxygen
          brew install mpich
          brew install netcdf
          brew install wget
          if [[ ${{ matrix.compiler }} == "gcc-9" ]]; then
            sudo ln -sf /usr/local/bin/gfortran-9 /usr/local/bin/gfortran
          elif  [[ ${{ matrix.compiler }} == "gcc-10" ]]; then
            sudo ln -sf /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
          fi
        fi

    - name: cache-esmf
      id: cache-esmf
      uses: actions/cache@v2
      with:
        path: ~/esmf
        key: esmf-${{ runner.os }}-8.0.1-2

    - name: build-esmf
      if: steps.cache-esmf.outputs.cache-hit != 'true'
      run: |
        set -x
        pushd ~
        export ESMF_DIR=~/esmf-ESMF_8_0_1
        wget https://github.com/esmf-org/esmf/archive/ESMF_8_0_1.tar.gz &> /dev/null && ls -l
        tar zxf ESMF_8_0_1.tar.gz && ls -l
        cd esmf-ESMF_8_0_1
        export ESMF_COMM=mpich3
        export ESMF_INSTALL_BINDIR=bin
        export ESMF_INSTALL_LIBDIR=lib
        export ESMF_INSTALL_MODDIR=mod
        export ESMF_COMPILER=gfortran
        export ESMF_INSTALL_PREFIX=~/esmf
        export ESMF_NETCDF=split
        if [[ ${{ matrix.os }} == "ubuntu-20.04" ]]; then 
          export ESMF_NETCDF_INCLUDE=/usr/include
          export ESMF_NETCDF_LIBPATH=/usr/x86_64-linux-gnu
        elif [[ ${{ matrix.os }} == "macos-10.15" ]]; then
          export ESMF_NETCDF_INCLUDE=/usr/local/include
          export ESMF_NETCDF_LIBPATH=/usr/local/lib
        fi
        make -j2
        make install

    - name: cache-jasper
      id: cache-jasper
      uses: actions/cache@v2
      with:
        path: ~/jasper
        key: jasper-${{ runner.os }}-2.0.22

    - name: build-jasper
      if: steps.cache-jasper.outputs.cache-hit != 'true'
      run: |
        set -x
        pwd
        wget https://github.com/jasper-software/jasper/archive/version-2.0.22.tar.gz &> /dev/null && ls -l
        tar zxf version-2.0.22.tar.gz && ls -l
        cd jasper-version-2.0.22
        mkdir build-jasper && cd build-jasper
        cmake .. -DCMAKE_INSTALL_PREFIX=~/jasper
        make -j2
        make install

    - name: checkout-nceplibs
      uses: actions/checkout@v2
      with:
        repository: NOAA-EMC/NCEPLIBS
        path: nceplibs

    - name: cache-nceplibs
      id: cache-nceplibs
      uses: actions/cache@v2
      with:
        path: ~/nceplibs
        key: nceplibs-${{ runner.os }}-1.3.0

    - name: build-nceplibs
      if: steps.cache-nceplibs.outputs.cache-hit != 'true'
      run: |
        set -x
        export ESMFMKFILE=~/esmf/lib/esmf.mk
        wget https://github.com/NOAA-EMC/NCEPLIBS/archive/v1.3.0.tar.gz &> /dev/null
        tar zxf v1.3.0.tar.gz && ls -l
        cd NCEPLIBS-1.3.0
        mkdir build && cd build
        cmake .. -DCMAKE_PREFIX_PATH='~;~/jasper' -DCMAKE_INSTALL_PREFIX='~/nceplibs' -DFLAT=ON
        make -j2
       
    - name: checkout-ufs-utils
      uses: actions/checkout@v2
      with: 
        path: ufs_utils

    - name: build-ufs-utils
      run: |
        set -x
        mpicc --version
        mpifort --version
        pwd
        export ESMFMKFILE=~/esmf/lib/esmf.mk
        cd ufs_utils
        mkdir build && cd build
        cmake .. -DCMAKE_PREFIX_PATH='~;~/jasper;~/nceplibs' -DENABLE_DOCS=On
        make -j2
        make test
